<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
><!--default-autowire="byName" --><!-- 使用了MapperScannerConfigurer,不能使用byName-->

	<description>Spring公共配置 </description>

	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- property-placeholder是一个属性遍历器，定位一个属性文件 -->
	<context:property-placeholder location="classpath*:config/configuration.properties"></context:property-placeholder>

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.userName}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info

        <property name="defaultAutoCommit" value="false" />&ndash;&gt;-->
		<!--<property name="initialSize" value="${dbcp.initialSize}" />-->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="removeAbandoned" value="true"/>
		<!-- 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 -->
		<property name="removeAbandonedTimeout" value="30"/>
		<!-- 防止数据库自动断开连接 -->
		<property name="validationQuery" value="SELECT 1"/>
		<property name="testOnBorrow" value="false" />
		<property name="timeBetweenEvictionRunsMillis" value="120000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="testWhileIdle" value="true"></property>
	</bean>
	<!-- 事务配置 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" ></property>
	</bean>
	<bean id="transactionTemplate"
		  class="org.springframework.transaction.support.TransactionTemplate"
		  p:transactionManager-ref="txManager">
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.broker.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" rollback-for="Exception"/>
			<tx:method name="add*" rollback-for="Exception"/>
			<tx:method name="del*" rollback-for="Exception"/>
			<tx:method name="mod*" rollback-for="Exception"/>
			<tx:method name="update*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="false">
		<aop:pointcut id="aopTxPointcut" expression="execution(* com.broker.service..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aopTxPointcut"/>
	</aop:config>



	<!-- session设置 -->
	<!--<bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="3600"></property>
	</bean>-->
</beans>