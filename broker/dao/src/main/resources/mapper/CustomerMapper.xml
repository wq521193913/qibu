<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.broker.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=BIT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByExample" parameterType="com.broker.domain.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.broker.domain.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.broker.domain.CustomerExample" resultType="java.lang.Integer">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAdd != null">
        customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerUser != null">
        broker_user = #{record.brokerUser,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set uid = #{record.uid,jdbcType=INTEGER},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      broker_user = #{record.brokerUser,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=BIT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByExample" parameterType="com.broker.domain.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.broker.domain.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.broker.domain.CustomerExample" resultType="java.lang.Integer">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAdd != null">
        customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerUser != null">
        broker_user = #{record.brokerUser,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set uid = #{record.uid,jdbcType=INTEGER},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      broker_user = #{record.brokerUser,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=BIT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByExample" parameterType="com.broker.domain.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.broker.domain.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.broker.domain.CustomerExample" resultType="java.lang.Integer">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAdd != null">
        customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerUser != null">
        broker_user = #{record.brokerUser,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set uid = #{record.uid,jdbcType=INTEGER},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      broker_user = #{record.brokerUser,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=BIT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.broker.domain.Customer">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_add" jdbcType="VARCHAR" property="customerAdd" />
    <result column="broker_user" jdbcType="INTEGER" property="brokerUser" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uid, customer_phone, customer_name, customer_add, broker_user, status, create_date, 
    update_date, update_user, remarks, is_del
  </sql>
  <select id="selectByExample" parameterType="com.broker.domain.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.broker.domain.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer (uid, customer_phone, customer_name, 
      customer_add, broker_user, status, 
      create_date, update_date, update_user, 
      remarks, is_del)
    values (#{uid,jdbcType=INTEGER}, #{customerPhone,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{customerAdd,jdbcType=VARCHAR}, #{brokerUser,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{remarks,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.broker.domain.Customer">
    <selectKey keyProperty="uid" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      uid,
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerAdd != null">
        customer_add,
      </if>
      <if test="brokerUser != null">
        broker_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{uid,jdbcType=INTEGER},
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.broker.domain.CustomerExample" resultType="java.lang.Integer">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAdd != null">
        customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerUser != null">
        broker_user = #{record.brokerUser,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set uid = #{record.uid,jdbcType=INTEGER},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      customer_add = #{record.customerAdd,jdbcType=VARCHAR},
      broker_user = #{record.brokerUser,jdbcType=INTEGER},
      status = #{record.status,jdbcType=BIT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.broker.domain.Customer">
    update customer
    <set>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerAdd != null">
        customer_add = #{customerAdd,jdbcType=VARCHAR},
      </if>
      <if test="brokerUser != null">
        broker_user = #{brokerUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broker.domain.Customer">
    update customer
    set customer_phone = #{customerPhone,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR},
      customer_add = #{customerAdd,jdbcType=VARCHAR},
      broker_user = #{brokerUser,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=BIT}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>